# JDBC DataSource configuration
quarkus.datasource.db-kind=mysql
quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/resource
quarkus.datasource.username=root
quarkus.datasource.password=password
quarkus.datasource.jdbc.driver=com.mysql.cj.jdbc.Driver
quarkus.live-reload.instrumentation=true

# Hibernate ORM configuration
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.dialect=org.hibernate.dialect.MySQLDialect

# Flyway configuration
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.locations=classpath:db/migration

# JWT configuration
mp.jwt.sign.key-location=classpath:jwt/privateKey.pem
mp.jwt.verify.publickey.location=classpath:jwt/publicKey.pem
smallrye.jwt.sign.key.location=classpath:jwt/privateKey.pem
quarkus.swagger-ui.theme=original






# # OIDC Configuration
# quarkus.oidc.auth-server-url=https://accounts.google.com
# quarkus.oidc.client-id=1075100542608-ie0d0s5apolo9h7n1t60ostjj3lm6nft.apps.googleusercontent.com
# quarkus.oidc.credentials.secret=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
# quarkus.oidc.application-type=web-app
# quarkus.oidc.authentication.scopes=openid,profile,email
# quarkus.oidc.roles.source=idtoken
# quarkus.oidc.user-info-required=true
# quarkus.oidc.jwks-url=https://www.googleapis.com/oauth2/v3/certs
# quarkus.http.auth.permission.authenticated.paths=/*
# quarkus.http.auth.permission.authenticated.policy=authenticated
# quarkus.oidc.devservices.enabled=true
# quarkus.log.category."io.quarkus.oidc".level=DEBUG





# quarkus.oidc.token.allow-jwt-introspection=true
# quarkus.oidc.token.allow-opaque-token-introspection=true
# quarkus.oidc.introspection-path=/protocol/openid-connect/tokens/introspect
# quarkus.oidc.authentication.user-info-required=true

# quarkus.log.category."io.quarkus.oidc".level=DEBUG


# Generate private key
# openssl genrsa -out rsaPrivateKey.pem 2048

# Generate public key
# openssl rsa -pubout -in rsaPrivateKey.pem -out publicKey.pem

# openssl command for converting private key
# openssl pkcs8 -topk8 -nocrypt -inform pem -in rsaPrivateKey.pem -outform pem -out privateKey.pem


# SECRET KEY =0/PtFNMJmn6HM/df4VVPBYJ8zu5HIe5MA2wPpYJnWp8=
#openssl rand -base64 32
